{"version":3,"sources":["Containers/navigation.js","redux/actions/authAction.js","redux/constants/authConst.js","redux/operations/authOperations.js","components/UserMenu/UserMenu.js","components/Header/Header.js","redux/actions/contactsAction.js","redux/constants/contactsConst.js","components/PhoneForm/PhoneForm.js","redux/selectors/contacts-selectors.js","components/FindContact/FindContact.js","redux/operations/contactsOperations.js","Containers/Home/Home.js","Containers/Login/Login.js","Containers/Registration/Registration.js","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","components/App/App.js","redux/reducers/contactsReducer.js","redux/reducers/authReducer.js","redux/store.js","index.js"],"names":["navigation","registerReguest","createAction","registerSuccess","registerError","loginReguest","loginSuccess","loginError","logOutReguest","logOutSuccess","logOutError","getCurrentUserReguest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","UserMenu","email","useSelector","state","auth","user","dispatch","useDispatch","token","className","onClick","a","url","method","headers","Authorization","then","catch","error","logOut","defaultProps","Header","to","getContactsReguest","getContactsSeccess","getContactsError","addContactsReguest","addContactsSeccess","addContactsError","deleteContactsReguest","deleteContactsSeccess","deleteContactsError","inputValue","e","payload","target","value","PhoneForm","submitForm","name","contactInputValue","number","useState","result","setResult","useEffect","CSSTransition","in","classNames","timeout","mountOnEnter","onSubmit","type","onChange","contactsSelector","contacts","items","contactsFilterSelector","filter","contactsItemsSelector","getFilteredSelector","createSelector","item","toLowerCase","includes","mapDispatchToProps","deleteContact","id","getState","connect","length","TransitionGroup","component","map","key","Home","setState","preventDefault","props","find","toggle","addContact","status","this","getCurrentUser","getContact","unmountOnExit","Component","data","response","persistedToken","console","log","initialState","password","Login","form","setForm","inputHandler","post","placeholder","Registration","PrivateRoute","routeProps","isAuthorized","render","PublicRoute","restricted","App","exact","path","createReducer","contact","combineReducers","_","persistConfig","storage","whitelist","defaultMidleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","rootReducer","persistReducer","middleware","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4defb857.chunk.js","sourcesContent":["export const navigation = {\n  home: \"/\",\n  login: \"/login\",\n  registration: \"/registration\",\n};\n","import { createAction } from \"@reduxjs/toolkit\";\nimport {\n  REGISTER_REGUEST,\n  REGISTER_REGUEST_SUCCESS,\n  REGISTER_REGUEST_ERROR,\n  LOGIN_REGUEST,\n  LOGIN_REGUEST_SUCCESS,\n  LOGIN_REGUEST_ERROR,\n  LOGOUT_REGUEST,\n  LOGOUT_REGUEST_SUCCESS,\n  LOGOUT_REGUEST_ERROR,\n  CURRENT_USER_REGUEST,\n  CURRENT_USER_SUCCESS,\n  CURRENT_USER_ERROR,\n} from \"../constants/authConst\";\n\nexport const registerReguest = createAction(REGISTER_REGUEST);\nexport const registerSuccess = createAction(REGISTER_REGUEST_SUCCESS);\nexport const registerError = createAction(REGISTER_REGUEST_ERROR);\n\nexport const loginReguest = createAction(LOGIN_REGUEST);\nexport const loginSuccess = createAction(LOGIN_REGUEST_SUCCESS);\nexport const loginError = createAction(LOGIN_REGUEST_ERROR);\n\nexport const logOutReguest = createAction(LOGOUT_REGUEST);\nexport const logOutSuccess = createAction(LOGOUT_REGUEST_SUCCESS);\nexport const logOutError = createAction(LOGOUT_REGUEST_ERROR);\n\nexport const getCurrentUserReguest = createAction(CURRENT_USER_REGUEST);\nexport const getCurrentUserSuccess = createAction(CURRENT_USER_SUCCESS);\nexport const getCurrentUserError = createAction(CURRENT_USER_ERROR);\n","export const REGISTER_REGUEST = \"@auth/registerReguest\";\nexport const REGISTER_REGUEST_SUCCESS = \"@auth/registerSuccess\";\nexport const REGISTER_REGUEST_ERROR = \"@auth/registerError\";\n\nexport const LOGIN_REGUEST = \"@auth/loginReguest\";\nexport const LOGIN_REGUEST_SUCCESS = \"@auth/loginSuccess\";\nexport const LOGIN_REGUEST_ERROR = \"@auth/loginError\";\n\nexport const LOGOUT_REGUEST = \"@auth/logoutReguest\";\nexport const LOGOUT_REGUEST_SUCCESS = \"@auth/logoutSuccess\";\nexport const LOGOUT_REGUEST_ERROR = \"@auth/logoutError\";\n\nexport const CURRENT_USER_REGUEST = \"@auth/currentuserReguest\";\nexport const CURRENT_USER_SUCCESS = \"@auth/currentuserSuccess\";\nexport const CURRENT_USER_ERROR = \"@auth/currentuserError\";\n","import axios from \"axios\";\nimport {\n  registerReguest,\n  registerSuccess,\n  registerError,\n  loginReguest,\n  loginSuccess,\n  loginError,\n  logOutReguest,\n  logOutSuccess,\n  logOutError,\n  getCurrentUserReguest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from \"../actions/authAction\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nexport const register = (user) => async (dispatch) => {\n  dispatch(registerReguest());\n  await axios\n    .post(\"/users/signup\", user)\n    .then((response) => dispatch(registerSuccess(response.data)))\n    .catch((error) => dispatch(registerError({ error })));\n};\n\nexport const logIn = (user) => async (dispatch) => {\n  dispatch(loginReguest());\n  await axios\n    .post(\"/users/login\", user)\n    .then((response) => dispatch(loginSuccess(response.data)))\n    .catch((error) => dispatch(loginError(error)));\n};\n\nexport const logOut = (token) => async (dispatch) => {\n  dispatch(logOutReguest());\n  await axios({\n    url: \"/users/logout\",\n    method: \"post\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then(() => dispatch(logOutSuccess()))\n    .catch((error) => dispatch(logOutError(error)));\n};\n\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  dispatch(getCurrentUserReguest());\n  await axios({\n    url: \"/users/current\",\n    method: \"get\",\n    headers: {\n      Authorization: `Bearer ${persistedToken}`,\n    },\n  })\n    .then(({ data }) => dispatch(getCurrentUserSuccess(data)))\n    .catch((error) => dispatch(getCurrentUserError(error)));\n};\n","import React from \"react\";\n// import PropTypes from 'prop-types';\nimport \"./UserMenu.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logOut } from \"../../redux/operations/authOperations\";\n\nconst UserMenu = () => {\n  const email = useSelector((state) => state.auth.user.email);\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.auth.token);\n\n  const logOutfromPage = () => {\n    dispatch(logOut(token));\n  };\n\n  return (\n    <>\n      <p>{email}</p>\n      <button className=\"log-out\" onClick={logOutfromPage}>\n        Log Out\n      </button>\n    </>\n  );\n};\n\nUserMenu.propTypes = {\n  // bla: PropTypes.string,\n};\n\nUserMenu.defaultProps = {\n  // bla: 'test',\n};\n\nexport default UserMenu;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport \"./Header.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { navigation } from \"../../Containers/navigation\";\nimport UserMenu from \"../UserMenu/UserMenu\";\nimport { useSelector } from \"react-redux\";\n\nconst Header = () => {\n  const token = useSelector((state) => state.auth.token);\n  return (\n    <header>\n      <nav className=\"main-nav\">\n        {!token && (\n          <NavLink to={navigation.login} className=\"nav-link\">\n            Login\n          </NavLink>\n        )}\n        {!token && (\n          <NavLink to={navigation.registration} className=\"nav-link\">\n            Registration\n          </NavLink>\n        )}\n        {token && (\n          <NavLink to={navigation.home} className=\"nav-link\">\n            Home\n          </NavLink>\n        )}\n        {token && <UserMenu />}\n      </nav>\n    </header>\n  );\n};\nHeader.propTypes = {\n  // bla: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Header;\n","import { VALUE } from \"../constants/contactsConst\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const getContactsReguest = createAction(\"@contacts/getReguest\");\nexport const getContactsSeccess = createAction(\"@contacts/getReguestSeccess\");\nexport const getContactsError = createAction(\"@contacts/getReguestError\");\n// ==================================================================\nexport const addContactsReguest = createAction(\"@contacts/addReguest\");\nexport const addContactsSeccess = createAction(\"@contacts/addReguestSeccess\");\nexport const addContactsError = createAction(\"@contacts/addReguestError\");\n// ==================================================================\nexport const deleteContactsReguest = createAction(\"@contacts/deleteReguest\");\nexport const deleteContactsSeccess = createAction(\n  \"@contacts/deleteReguestSeccess\"\n);\nexport const deleteContactsError = createAction(\"@contacts/deleteReguestError\");\n// ==================================================================\nexport const inputValue = createAction(VALUE, (e) => ({\n  payload: e.target.value,\n}));\n","export const LOCAL = \"@contacts/localstorage\";\nexport const ADD = \"@contacts/add\";\nexport const DELETE = \"@contacts/delete\";\nexport const VALUE = \"@contacts/value\";\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./PhoneForm.css\";\n\nconst PhoneForm = ({ submitForm, name, contactInputValue, number }) => {\n  const [result, setResult] = useState(false);\n\n  useEffect(() => {\n    setResult(true);\n  }, []);\n\n  return (\n    <>\n      <CSSTransition in={result} classNames=\"title\" timeout={500} mountOnEnter>\n        <h2 className=\"title\">Phonebook</h2>\n      </CSSTransition>\n\n      <form className=\"form\" onSubmit={submitForm}>\n        <span>Name</span>\n        <br></br>\n        <input\n          className=\"input_name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={contactInputValue}\n        ></input>\n        <br></br>\n        <span>Number</span>\n        <br></br>\n        <input\n          className=\"input_number\"\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={contactInputValue}\n        ></input>\n        <br></br>\n        <button className=\"submit_btn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default PhoneForm;\n\nPhoneForm.propTypes = {\n  submitForm: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  contactInputValue: PropTypes.func.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const contactsSelector = (state) => state.contacts.items;\n\nexport const contactsFilterSelector = (state) => state.contacts.filter;\nexport const contactsItemsSelector = (state) => state.contacts.items;\n\nexport const getFilteredSelector = createSelector(\n  [contactsSelector, contactsFilterSelector],\n  (contacts, filter) => {\n    return contacts.filter((item) =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n// export const getFilteredSelector = (state) => {\n//   const contacts = contactsSelector(state);\n//   const filter = contactsFilterSelector(state).toLowerCase();\n\n//   return contacts.filter((item) => item.name.toLowerCase().includes(filter));\n// };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport \"../FindContact/FindContact.css\";\nimport { inputValue } from \"../../redux/actions/contactsAction\";\nimport { deleteContact } from \"../../redux/operations/contactsOperations\";\nimport {\n  contactsFilterSelector,\n  contactsItemsSelector,\n  getFilteredSelector,\n} from \"../../redux/selectors/contacts-selectors\";\n\nconst FindContact = ({ inputValue, deleteContact, result }) => {\n  return (\n    <>\n      {result.length > 0 && (\n        <div className=\"search-container\">\n          <span>Find contacts by name</span>\n          <br></br>\n          <input type=\"text\" onChange={inputValue}></input>\n        </div>\n      )}\n      <div className=\"search_info\">\n        <TransitionGroup component=\"ul\" className=\"contact_list\">\n          {result.map((item) => (\n            <CSSTransition key={item.id} classNames=\"list__item\" timeout={800}>\n              <li className=\"contact_item\" key={item.id}>\n                {item.name} : {item.number}\n                <button\n                  className=\"delete_btn\"\n                  type=\"button\"\n                  onClick={() => deleteContact(item.id)}\n                >\n                  Delete\n                </button>\n              </li>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  filter: contactsFilterSelector(state),\n  contacts: contactsItemsSelector(state),\n  result: getFilteredSelector(state),\n});\n\nconst mapDispatchToProps = {\n  inputValue,\n  deleteContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FindContact);\n\nFindContact.propTypes = {\n  deleteContact: PropTypes.func.isRequired,\n};\n","import axios from \"axios\";\nimport {\n  addContactsReguest,\n  addContactsSeccess,\n  addContactsError,\n  getContactsReguest,\n  getContactsSeccess,\n  getContactsError,\n  deleteContactsReguest,\n  deleteContactsSeccess,\n  deleteContactsError,\n} from \"../actions/contactsAction\";\n\nexport const getContact = () => (dispatch, getState) => {\n  const {\n    auth: { token },\n  } = getState();\n\n  dispatch(getContactsReguest());\n  axios({\n    url: \"/contacts\",\n    method: \"get\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => {\n      console.log(response.data);\n      dispatch(getContactsSeccess(response.data));\n    })\n    .catch((error) => dispatch(getContactsError(error)));\n};\n\nexport const addContact = (name, number) => (dispatch, getState) => {\n  const {\n    auth: { token },\n  } = getState();\n\n  dispatch(addContactsReguest());\n  axios({\n    url: \"/contacts\",\n    method: \"post\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n    data: { name, number },\n  })\n    .then((response) => {\n      dispatch(addContactsSeccess(response.data));\n    })\n    .catch((error) => dispatch(addContactsError(error)));\n};\n\nexport const deleteContact = (id) => (dispatch, getState) => {\n  const {\n    auth: { token },\n  } = getState();\n\n  dispatch(deleteContactsReguest());\n  axios({\n    url: `/contacts/${id}`,\n    method: \"delete\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then(() => {\n      dispatch(deleteContactsSeccess(id));\n    })\n    .catch((error) => dispatch(deleteContactsError(error)));\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  addContact,\n  getContact,\n} from \"../../redux/operations/contactsOperations\";\nimport PfoneForm from \"../../components/PhoneForm/PhoneForm\";\nimport FindContact from \"../../components/FindContact/FindContact\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./Home.css\";\nimport { contactsSelector } from \"../../redux/selectors/contacts-selectors\";\nimport { getCurrentUser } from \"../../redux/operations/authOperations\";\n\nclass Home extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    value: false,\n  };\n\n  contactInputValue = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = (e) => {\n    e.preventDefault();\n    const { name, number, value } = this.state;\n    if (this.props.contacts.find((item) => item.name === this.state.name)) {\n      this.toggle(value);\n      return;\n    }\n    this.props.addContact(name, number);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  toggle = (status) => {\n    this.setState({\n      value: !status,\n    });\n  };\n\n  componentDidMount() {\n    this.props.getCurrentUser();\n    this.props.getContact();\n  }\n\n  render() {\n    const { name, number, value } = this.state;\n    const test = () => {\n      this.toggle(true);\n    };\n\n    return (\n      <>\n        <CSSTransition\n          in={value}\n          classNames=\"alert\"\n          timeout={500}\n          mountOnEnter\n          unmountOnExit\n        >\n          <button\n            className=\"alert\"\n            onClick={test}\n          >{`${name} alredy exist`}</button>\n        </CSSTransition>\n\n        <PfoneForm\n          submitForm={this.submitForm}\n          name={name}\n          contactInputValue={this.contactInputValue}\n          number={number}\n        />\n        <FindContact />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelector(state),\n});\n\nconst mapDispatchToProps = {\n  addContact,\n  getCurrentUser,\n  getContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { useState } from \"react\";\nimport { navigation } from \"../navigation\";\nimport { NavLink } from \"react-router-dom\";\n// import PropTypes from 'prop-types';\nimport { useDispatch } from \"react-redux\";\nimport \"./Login.css\";\nimport { logIn } from \"../../redux/operations/authOperations\";\n\nconst initialState = { email: \"\", password: \"\" };\n\nconst Login = () => {\n  const [form, setForm] = useState(initialState);\n  const dispatch = useDispatch();\n  const inputHandler = ({ target }) => {\n    const { name, value } = target;\n    setForm((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    dispatch(logIn(form));\n    setForm(initialState);\n  };\n\n  return (\n    <>\n      <h1 className=\"log-in-title\">Log In</h1>\n      <form className=\"log-in-form\" onSubmit={submitForm}>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"email\"\n          className=\"log-in-input\"\n          value={form.email}\n          onChange={inputHandler}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          className=\"log-in-input\"\n          value={form.password}\n          onChange={inputHandler}\n        />\n        <button className=\"log-in-button\">Sign In</button>\n        <p className=\"log-in\">\n          If you dont have account, please folow{\" \"}\n          <NavLink to={navigation.registration}>Registration</NavLink>\n        </p>\n      </form>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  // bla: PropTypes.string,\n};\n\nLogin.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { navigation } from \"../navigation\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../../redux/operations/authOperations\";\n// import PropTypes from 'prop-types';\nimport \"./Registration.css\";\n\nconst initialState = { name: \"\", email: \"\", password: \"\" };\n\nconst Registration = () => {\n  const [form, setForm] = useState(initialState);\n  const dispatch = useDispatch();\n\n  const inputHandler = ({ target }) => {\n    const { name, value } = target;\n    setForm((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    dispatch(register(form));\n    setForm(initialState);\n  };\n\n  return (\n    <>\n      <h1 className=\"registration-title\">Registration</h1>\n      <form className=\"registration-form\" onSubmit={submitForm}>\n        <input\n          type=\"name\"\n          name=\"name\"\n          placeholder=\"name\"\n          className=\"reginstration-input\"\n          onChange={inputHandler}\n          value={form.name}\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"email\"\n          className=\"reginstration-input\"\n          onChange={inputHandler}\n          value={form.email}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          className=\"reginstration-input\"\n          onChange={inputHandler}\n          value={form.password}\n        />\n        <button className=\"registaration-button\">Registration</button>\n        <p className=\"log-in\">\n          If you alredy have account, please{\" \"}\n          <NavLink to={navigation.login}>Log In</NavLink>\n        </p>\n      </form>\n    </>\n  );\n};\n\nRegistration.propTypes = {\n  // bla: PropTypes.string,\n};\n\nRegistration.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Registration;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { navigation } from \"../../Containers/navigation\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, ...routeProps }) => {\n  const isAuthorized = useSelector((state) => state.auth.token);\n\n  return (\n    <Route\n      {...routeProps}\n      render={(props) => {\n        return isAuthorized ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={navigation.login} />\n        );\n      }}\n    />\n  );\n};\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { navigation } from \"../../Containers/navigation\";\nimport { useSelector } from \"react-redux\";\n\nconst PublicRoute = ({ component: Component, restricted, ...routeProps }) => {\n  const isAuthorized = useSelector((state) => state.auth.token);\n\n  return (\n    <Route\n      {...routeProps}\n      render={(props) => {\n        return isAuthorized && restricted ? (\n          <Redirect to={navigation.home} />\n        ) : (\n          <Component {...props} />\n        );\n      }}\n    />\n  );\n};\nexport default PublicRoute;\n","import React from \"react\";\nimport Header from \"../Header/Header\";\nimport Home from \"../../Containers/Home/Home\";\nimport Login from \"../../Containers/Login/Login\";\nimport Registration from \"../../Containers/Registration/Registration\";\nimport { Switch } from \"react-router-dom\";\nimport { navigation } from \"../../Containers/navigation\";\n// import { Route, useHistory } from \"react-router-dom\";\n// import { useSelector } from \"react-redux\";\n// import { useEffect } from \"react\";\nimport PrivateRoute from \"../Routes/PrivateRoute\";\nimport PublicRoute from \"../Routes/PublicRoute\";\n\nfunction App() {\n  // const token = useSelector((state) => state.auth.token);\n  // const history = useHistory();\n\n  // useEffect(() => {\n  //   if (token) {\n  //     history.push(navigation.home);\n  //   } else {\n  //     history.push(navigation.login);\n  //   }\n  // }, [history, token]);\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <PrivateRoute exact path={navigation.home} component={Home} />\n        {/* <Route exact path={navigation.home} component={Home} /> */}\n        <PublicRoute\n          path={navigation.login}\n          component={Login}\n          restricted={true}\n        />\n        <PublicRoute\n          path={navigation.registration}\n          component={Registration}\n          restricted={true}\n        />\n        {/* <Route path={navigation.login} component={Login} /> */}\n        {/* <Route path={navigation.registration} component={Registration} /> */}\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addContactsSeccess,\n  getContactsSeccess,\n  deleteContactsSeccess,\n  inputValue,\n} from \"../actions/contactsAction\";\nimport { logOutSuccess } from \"../actions/authAction\";\n\nconst items = createReducer([], {\n  [getContactsSeccess]: (state, { payload }) => payload,\n  [addContactsSeccess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSeccess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n  [logOutSuccess]: () => [],\n});\n\nconst filter = createReducer(\"\", {\n  [inputValue]: (state, { payload }) => (state = payload),\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  registerSuccess,\n  registerError,\n  loginSuccess,\n  loginError,\n  logOutSuccess,\n  logOutError,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from \"../actions/authAction\";\n\nconst initialState = { name: null, email: null };\n\nconst user = createReducer(initialState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n  [logOutSuccess]: () => initialState,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logOutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [registerError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [logOutError]: (_, { payload }) => payload,\n  [getCurrentUserError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./reducers/contactsReducer\";\nimport auth from \"./reducers/authReducer\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nconst persistConfig = {\n  key: \"token\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst defaultMidleware = getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  },\n});\n\nconst store = configureStore({\n  reducer: {\n    contacts: rootReducer,\n    auth: persistReducer(persistConfig, auth),\n  },\n  middleware: [...defaultMidleware],\n});\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App/App\";\nimport store, { persistor } from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}