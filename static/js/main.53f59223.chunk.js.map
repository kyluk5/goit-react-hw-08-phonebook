{"version":3,"sources":["Containers/navigation.js","redux/actions/authAction.js","redux/constants/authConst.js","redux/operations/authOperations.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/Header/Header.js","Containers/Home/Home.js","Containers/Login/Login.js","Containers/Registration/Registration.js","components/Routes/PrivateRoute.js","components/Routes/PublicRoute.js","redux/actions/contactsAction.js","redux/constants/contactsConst.js","components/PhoneForm/PhoneForm.js","redux/selectors/contacts-selectors.js","components/FindContact/FindContact.js","redux/operations/contactsOperations.js","Containers/Contacts/Contacts.js","components/App/App.js","redux/reducers/contactsReducer.js","redux/reducers/authReducer.js","redux/store.js","index.js"],"names":["navigation","registerReguest","createAction","registerSuccess","registerError","loginReguest","loginSuccess","loginError","logOutReguest","logOutSuccess","logOutError","getCurrentUserReguest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","UserMenu","email","useSelector","state","auth","user","dispatch","useDispatch","token","className","onClick","a","url","method","headers","Authorization","then","catch","message","logOut","defaultProps","AuthNav","to","exact","Header","Home","initialState","password","Login","useState","form","setForm","inputHandler","target","name","value","onSubmit","e","preventDefault","post","response","data","type","placeholder","onChange","Registration","PrivateRoute","Component","component","routeProps","isAuthorized","render","props","PublicRoute","restricted","getContactsReguest","getContactsSeccess","getContactsError","addContactsReguest","addContactsSeccess","addContactsError","deleteContactsReguest","deleteContactsSeccess","deleteContactsError","inputValue","payload","PhoneForm","submitForm","contactInputValue","number","result","setResult","useEffect","CSSTransition","in","classNames","timeout","mountOnEnter","contactsSelector","contacts","items","contactsFilterSelector","filter","contactsItemsSelector","getFilteredSelector","createSelector","item","toLowerCase","includes","mapDispatchToProps","deleteContact","id","getState","connect","length","TransitionGroup","map","key","Contacts","setState","find","toggle","addContact","status","this","getCurrentUser","getContact","unmountOnExit","persistedToken","console","log","App","path","createReducer","contact","combineReducers","_","error","persistConfig","storage","whitelist","defaultMidleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","rootReducer","persistReducer","middleware","persistor","persistStore","ReactDOM","loading","document","getElementById"],"mappings":"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","file":"static/js/main.53f59223.chunk.js","sourcesContent":["export const navigation = {\n  home: \"/\",\n  login: \"/login\",\n  registration: \"/register\",\n  contacts: \"/contacts\",\n};\n","import { createAction } from \"@reduxjs/toolkit\";\nimport {\n  REGISTER_REGUEST,\n  REGISTER_REGUEST_SUCCESS,\n  REGISTER_REGUEST_ERROR,\n  LOGIN_REGUEST,\n  LOGIN_REGUEST_SUCCESS,\n  LOGIN_REGUEST_ERROR,\n  LOGOUT_REGUEST,\n  LOGOUT_REGUEST_SUCCESS,\n  LOGOUT_REGUEST_ERROR,\n  CURRENT_USER_REGUEST,\n  CURRENT_USER_SUCCESS,\n  CURRENT_USER_ERROR,\n} from \"../constants/authConst\";\n\nexport const registerReguest = createAction(REGISTER_REGUEST);\nexport const registerSuccess = createAction(REGISTER_REGUEST_SUCCESS);\nexport const registerError = createAction(REGISTER_REGUEST_ERROR);\n\nexport const loginReguest = createAction(LOGIN_REGUEST);\nexport const loginSuccess = createAction(LOGIN_REGUEST_SUCCESS);\nexport const loginError = createAction(LOGIN_REGUEST_ERROR);\n\nexport const logOutReguest = createAction(LOGOUT_REGUEST);\nexport const logOutSuccess = createAction(LOGOUT_REGUEST_SUCCESS);\nexport const logOutError = createAction(LOGOUT_REGUEST_ERROR);\n\nexport const getCurrentUserReguest = createAction(CURRENT_USER_REGUEST);\nexport const getCurrentUserSuccess = createAction(CURRENT_USER_SUCCESS);\nexport const getCurrentUserError = createAction(CURRENT_USER_ERROR);\n","export const REGISTER_REGUEST = \"@auth/registerReguest\";\nexport const REGISTER_REGUEST_SUCCESS = \"@auth/registerSuccess\";\nexport const REGISTER_REGUEST_ERROR = \"@auth/registerError\";\n\nexport const LOGIN_REGUEST = \"@auth/loginReguest\";\nexport const LOGIN_REGUEST_SUCCESS = \"@auth/loginSuccess\";\nexport const LOGIN_REGUEST_ERROR = \"@auth/loginError\";\n\nexport const LOGOUT_REGUEST = \"@auth/logoutReguest\";\nexport const LOGOUT_REGUEST_SUCCESS = \"@auth/logoutSuccess\";\nexport const LOGOUT_REGUEST_ERROR = \"@auth/logoutError\";\n\nexport const CURRENT_USER_REGUEST = \"@auth/currentuserReguest\";\nexport const CURRENT_USER_SUCCESS = \"@auth/currentuserSuccess\";\nexport const CURRENT_USER_ERROR = \"@auth/currentuserError\";\n","import axios from \"axios\";\nimport {\n  registerReguest,\n  registerSuccess,\n  registerError,\n  loginReguest,\n  loginSuccess,\n  loginError,\n  logOutReguest,\n  logOutSuccess,\n  logOutError,\n  getCurrentUserReguest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from \"../actions/authAction\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nexport const register = (user) => async (dispatch) => {\n  dispatch(registerReguest());\n  await axios\n    .post(\"/users/signup\", user)\n    .then((response) => dispatch(registerSuccess(response.data)))\n    .catch(({ message }) => dispatch(registerError(message)));\n};\n\nexport const logIn = (user) => async (dispatch) => {\n  dispatch(loginReguest());\n  await axios\n    .post(\"/users/login\", user)\n    .then((response) => dispatch(loginSuccess(response.data)))\n    .catch(({ message }) => dispatch(loginError(message)));\n};\n\nexport const logOut = (token) => async (dispatch) => {\n  dispatch(logOutReguest());\n  await axios({\n    url: \"/users/logout\",\n    method: \"post\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then(() => dispatch(logOutSuccess()))\n    .catch(({ message }) => dispatch(logOutError(message)));\n};\n\nexport const getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  dispatch(getCurrentUserReguest());\n  await axios({\n    url: \"/users/current\",\n    method: \"get\",\n    headers: {\n      Authorization: `Bearer ${persistedToken}`,\n    },\n  })\n    .then(({ data }) => dispatch(getCurrentUserSuccess(data)))\n    .catch(({ message }) => dispatch(getCurrentUserError(message)));\n};\n","import React from \"react\";\n// import PropTypes from 'prop-types';\nimport \"./UserMenu.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logOut } from \"../../redux/operations/authOperations\";\n\nconst UserMenu = () => {\n  const email = useSelector((state) => state.auth.user.email);\n  const dispatch = useDispatch();\n  const token = useSelector((state) => state.auth.token);\n\n  const logOutfromPage = () => {\n    dispatch(logOut(token));\n  };\n\n  return (\n    <>\n      <p>{email}</p>\n      <button className=\"log-out\" onClick={logOutfromPage}>\n        Log Out\n      </button>\n    </>\n  );\n};\n\nUserMenu.propTypes = {\n  // bla: PropTypes.string,\n};\n\nUserMenu.defaultProps = {\n  // bla: 'test',\n};\n\nexport default UserMenu;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { navigation } from \"../../Containers/navigation\";\nimport \"./AuthNav.css\";\n\nconst AuthNav = () => {\n  return (\n    <div className=\"auth-nav\">\n      <NavLink to={navigation.login} exact className=\"auth-nav-link\">\n        Login\n      </NavLink>\n      <NavLink to={navigation.registration} exact className=\"auth-nav-link\">\n        Registration\n      </NavLink>\n    </div>\n  );\n};\n\nexport default AuthNav;\n","import React from \"react\";\n// import PropTypes from \"prop-types\";\nimport \"./Header.css\";\nimport { NavLink } from \"react-router-dom\";\nimport { navigation } from \"../../Containers/navigation\";\nimport UserMenu from \"../UserMenu/UserMenu\";\nimport AuthNav from \"../AuthNav/AuthNav\";\nimport { useSelector } from \"react-redux\";\n\nconst Header = () => {\n  const token = useSelector((state) => state.auth.token);\n  return (\n    <header>\n      <nav className=\"main-nav\">\n        {token ? (\n          <NavLink to={navigation.contacts} exact className=\"nav-link\">\n            Contacts\n          </NavLink>\n        ) : (\n          <NavLink to={navigation.home} exact className=\"nav-link\">\n            Home\n          </NavLink>\n        )}\n\n        {token ? <UserMenu /> : <AuthNav />}\n      </nav>\n    </header>\n  );\n};\nHeader.propTypes = {\n  // bla: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./Home.css\";\n\nconst Home = () => {\n  return (\n    <>\n      <h1 className=\"home-page\">Welkome to Phone Book</h1>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useState } from \"react\";\nimport { navigation } from \"../navigation\";\nimport { NavLink } from \"react-router-dom\";\n// import PropTypes from 'prop-types';\nimport { useDispatch } from \"react-redux\";\nimport \"./Login.css\";\nimport { logIn } from \"../../redux/operations/authOperations\";\n\nconst initialState = { email: \"\", password: \"\" };\n\nconst Login = () => {\n  const [form, setForm] = useState(initialState);\n  const dispatch = useDispatch();\n  const inputHandler = ({ target }) => {\n    const { name, value } = target;\n    setForm((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    dispatch(logIn(form));\n    setForm(initialState);\n  };\n\n  return (\n    <>\n      <h1 className=\"log-in-title\">Log In</h1>\n      <form className=\"log-in-form\" onSubmit={submitForm}>\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"email\"\n          className=\"log-in-input\"\n          value={form.email}\n          onChange={inputHandler}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          className=\"log-in-input\"\n          value={form.password}\n          onChange={inputHandler}\n        />\n        <button className=\"log-in-button\">Sign In</button>\n        <p className=\"log-in\">\n          If you dont have account, please folow{\" \"}\n          <NavLink to={navigation.registration}>Registration</NavLink>\n        </p>\n      </form>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  // bla: PropTypes.string,\n};\n\nLogin.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { navigation } from \"../navigation\";\nimport { NavLink } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../../redux/operations/authOperations\";\n// import PropTypes from 'prop-types';\nimport \"./Registration.css\";\n\nconst initialState = { name: \"\", email: \"\", password: \"\" };\n\nconst Registration = () => {\n  const [form, setForm] = useState(initialState);\n  const dispatch = useDispatch();\n\n  const inputHandler = ({ target }) => {\n    const { name, value } = target;\n    setForm((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    dispatch(register(form));\n    setForm(initialState);\n  };\n\n  return (\n    <>\n      <h1 className=\"registration-title\">Registration</h1>\n      <form className=\"registration-form\" onSubmit={submitForm}>\n        <input\n          type=\"name\"\n          name=\"name\"\n          placeholder=\"name\"\n          className=\"reginstration-input\"\n          onChange={inputHandler}\n          value={form.name}\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"email\"\n          className=\"reginstration-input\"\n          onChange={inputHandler}\n          value={form.email}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"password\"\n          className=\"reginstration-input\"\n          onChange={inputHandler}\n          value={form.password}\n        />\n        <button className=\"registaration-button\">Registration</button>\n        <p className=\"log-in\">\n          If you alredy have account, please{\" \"}\n          <NavLink to={navigation.login}>Log In</NavLink>\n        </p>\n      </form>\n    </>\n  );\n};\n\nRegistration.propTypes = {\n  // bla: PropTypes.string,\n};\n\nRegistration.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Registration;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { navigation } from \"../../Containers/navigation\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, ...routeProps }) => {\n  const isAuthorized = useSelector((state) => state.auth.token);\n\n  return (\n    <Route\n      {...routeProps}\n      render={(props) => {\n        return isAuthorized ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={navigation.login} />\n        );\n      }}\n    />\n  );\n};\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { navigation } from \"../../Containers/navigation\";\nimport { useSelector } from \"react-redux\";\n\nconst PublicRoute = ({ component: Component, restricted, ...routeProps }) => {\n  const isAuthorized = useSelector((state) => state.auth.token);\n\n  return (\n    <Route\n      {...routeProps}\n      render={(props) => {\n        return isAuthorized && restricted ? (\n          <Redirect to={navigation.contacts} />\n        ) : (\n          <Component {...props} />\n        );\n      }}\n    />\n  );\n};\nexport default PublicRoute;\n","import { VALUE } from \"../constants/contactsConst\";\nimport { createAction } from \"@reduxjs/toolkit\";\n\nexport const getContactsReguest = createAction(\"@contacts/getReguest\");\nexport const getContactsSeccess = createAction(\"@contacts/getReguestSeccess\");\nexport const getContactsError = createAction(\"@contacts/getReguestError\");\n// ==================================================================\nexport const addContactsReguest = createAction(\"@contacts/addReguest\");\nexport const addContactsSeccess = createAction(\"@contacts/addReguestSeccess\");\nexport const addContactsError = createAction(\"@contacts/addReguestError\");\n// ==================================================================\nexport const deleteContactsReguest = createAction(\"@contacts/deleteReguest\");\nexport const deleteContactsSeccess = createAction(\n  \"@contacts/deleteReguestSeccess\"\n);\nexport const deleteContactsError = createAction(\"@contacts/deleteReguestError\");\n// ==================================================================\nexport const inputValue = createAction(VALUE, (e) => ({\n  payload: e.target.value,\n}));\n","export const LOCAL = \"@contacts/localstorage\";\nexport const ADD = \"@contacts/add\";\nexport const DELETE = \"@contacts/delete\";\nexport const VALUE = \"@contacts/value\";\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./PhoneForm.css\";\n\nconst PhoneForm = ({ submitForm, name, contactInputValue, number }) => {\n  const [result, setResult] = useState(false);\n\n  useEffect(() => {\n    setResult(true);\n  }, []);\n\n  return (\n    <>\n      <CSSTransition in={result} classNames=\"title\" timeout={500} mountOnEnter>\n        <h2 className=\"title\">Phonebook</h2>\n      </CSSTransition>\n\n      <form className=\"form\" onSubmit={submitForm}>\n        <span>Name</span>\n        <br></br>\n        <input\n          className=\"input_name\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={contactInputValue}\n        ></input>\n        <br></br>\n        <span>Number</span>\n        <br></br>\n        <input\n          className=\"input_number\"\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={contactInputValue}\n        ></input>\n        <br></br>\n        <button className=\"submit_btn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default PhoneForm;\n\nPhoneForm.propTypes = {\n  submitForm: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  contactInputValue: PropTypes.func.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const contactsSelector = (state) => state.contacts.items;\n\nexport const contactsFilterSelector = (state) => state.contacts.filter;\nexport const contactsItemsSelector = (state) => state.contacts.items;\n\nexport const getFilteredSelector = createSelector(\n  [contactsSelector, contactsFilterSelector],\n  (contacts, filter) => {\n    return contacts.filter((item) =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\n// export const getFilteredSelector = (state) => {\n//   const contacts = contactsSelector(state);\n//   const filter = contactsFilterSelector(state).toLowerCase();\n\n//   return contacts.filter((item) => item.name.toLowerCase().includes(filter));\n// };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport \"../FindContact/FindContact.css\";\nimport { inputValue } from \"../../redux/actions/contactsAction\";\nimport { deleteContact } from \"../../redux/operations/contactsOperations\";\nimport {\n  contactsFilterSelector,\n  contactsItemsSelector,\n  getFilteredSelector,\n} from \"../../redux/selectors/contacts-selectors\";\n\nconst FindContact = ({ inputValue, deleteContact, result }) => {\n  return (\n    <>\n      {result.length > 0 && (\n        <div className=\"search-container\">\n          <span>Find contacts by name</span>\n          <br></br>\n          <input type=\"text\" onChange={inputValue}></input>\n        </div>\n      )}\n      <div className=\"search_info\">\n        <TransitionGroup component=\"ul\" className=\"contact_list\">\n          {result.map((item) => (\n            <CSSTransition key={item.id} classNames=\"list__item\" timeout={800}>\n              <li className=\"contact_item\" key={item.id}>\n                {item.name} : {item.number}\n                <button\n                  className=\"delete_btn\"\n                  type=\"button\"\n                  onClick={() => deleteContact(item.id)}\n                >\n                  Delete\n                </button>\n              </li>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  filter: contactsFilterSelector(state),\n  contacts: contactsItemsSelector(state),\n  result: getFilteredSelector(state),\n});\n\nconst mapDispatchToProps = {\n  inputValue,\n  deleteContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FindContact);\n\nFindContact.propTypes = {\n  deleteContact: PropTypes.func.isRequired,\n};\n","import axios from \"axios\";\nimport {\n  addContactsReguest,\n  addContactsSeccess,\n  addContactsError,\n  getContactsReguest,\n  getContactsSeccess,\n  getContactsError,\n  deleteContactsReguest,\n  deleteContactsSeccess,\n  deleteContactsError,\n} from \"../actions/contactsAction\";\n\nexport const getContact = () => (dispatch, getState) => {\n  const {\n    auth: { token },\n  } = getState();\n\n  dispatch(getContactsReguest());\n  axios({\n    url: \"/contacts\",\n    method: \"get\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((response) => {\n      console.log(response.data);\n      dispatch(getContactsSeccess(response.data));\n    })\n    .catch(({ message }) => dispatch(getContactsError(message)));\n};\n\nexport const addContact = (name, number) => (dispatch, getState) => {\n  const {\n    auth: { token },\n  } = getState();\n\n  dispatch(addContactsReguest());\n  axios({\n    url: \"/contacts\",\n    method: \"post\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n    data: { name, number },\n  })\n    .then((response) => {\n      dispatch(addContactsSeccess(response.data));\n    })\n    .catch(({ message }) => dispatch(addContactsError(message)));\n};\n\nexport const deleteContact = (id) => (dispatch, getState) => {\n  const {\n    auth: { token },\n  } = getState();\n\n  dispatch(deleteContactsReguest());\n  axios({\n    url: `/contacts/${id}`,\n    method: \"delete\",\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then(() => {\n      dispatch(deleteContactsSeccess(id));\n    })\n    .catch(({ message }) => dispatch(deleteContactsError(message)));\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  addContact,\n  getContact,\n} from \"../../redux/operations/contactsOperations\";\nimport PfoneForm from \"../../components/PhoneForm/PhoneForm\";\nimport FindContact from \"../../components/FindContact/FindContact\";\nimport { CSSTransition } from \"react-transition-group\";\nimport { contactsSelector } from \"../../redux/selectors/contacts-selectors\";\nimport { getCurrentUser } from \"../../redux/operations/authOperations\";\nimport \"./Contacts.css\";\n\nclass Contacts extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    value: false,\n  };\n\n  contactInputValue = ({ target }) => {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = (e) => {\n    e.preventDefault();\n    const { name, number, value } = this.state;\n    if (this.props.contacts.find((item) => item.name === this.state.name)) {\n      this.toggle(value);\n      return;\n    }\n    this.props.addContact(name, number);\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  toggle = (status) => {\n    this.setState({\n      value: !status,\n    });\n  };\n\n  componentDidMount() {\n    this.props.getCurrentUser();\n    this.props.getContact();\n  }\n\n  render() {\n    const { name, number, value } = this.state;\n    const test = () => {\n      this.toggle(true);\n    };\n\n    return (\n      <>\n        <CSSTransition\n          in={value}\n          classNames=\"alert\"\n          timeout={500}\n          mountOnEnter\n          unmountOnExit\n        >\n          <button\n            className=\"alert\"\n            onClick={test}\n          >{`${name} alredy exist`}</button>\n        </CSSTransition>\n\n        <PfoneForm\n          submitForm={this.submitForm}\n          name={name}\n          contactInputValue={this.contactInputValue}\n          number={number}\n        />\n        <FindContact />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelector(state),\n});\n\nconst mapDispatchToProps = {\n  addContact,\n  getCurrentUser,\n  getContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n","import React from \"react\";\nimport Header from \"../Header/Header\";\nimport Home from \"../../Containers/Home/Home\";\nimport Login from \"../../Containers/Login/Login\";\nimport Registration from \"../../Containers/Registration/Registration\";\nimport { Switch } from \"react-router-dom\";\nimport { navigation } from \"../../Containers/navigation\";\n\nimport PrivateRoute from \"../Routes/PrivateRoute\";\nimport PublicRoute from \"../Routes/PublicRoute\";\nimport Contacts from \"../../Containers/Contacts/Contacts\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Switch>\n        <PublicRoute\n          exact\n          path={navigation.home}\n          component={Home}\n          restricted={true}\n        />\n\n        <PublicRoute\n          path={navigation.login}\n          component={Login}\n          restricted={true}\n        />\n        <PublicRoute\n          path={navigation.registration}\n          component={Registration}\n          restricted={true}\n        />\n\n        <PrivateRoute path={navigation.contacts} component={Contacts} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  addContactsSeccess,\n  getContactsSeccess,\n  deleteContactsSeccess,\n  inputValue,\n} from \"../actions/contactsAction\";\nimport { logOutSuccess } from \"../actions/authAction\";\n\nconst items = createReducer([], {\n  [getContactsSeccess]: (state, { payload }) => payload,\n  [addContactsSeccess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSeccess]: (state, { payload }) =>\n    state.filter((contact) => contact.id !== payload),\n  [logOutSuccess]: () => [],\n});\n\nconst filter = createReducer(\"\", {\n  [inputValue]: (state, { payload }) => (state = payload),\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  registerSuccess,\n  registerError,\n  loginSuccess,\n  loginError,\n  logOutSuccess,\n  logOutError,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from \"../actions/authAction\";\n\nconst initialState = { name: null, email: null };\n\nconst user = createReducer(initialState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n  [logOutSuccess]: () => initialState,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logOutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n  [registerError]: (_, { payload }) => payload,\n  [loginError]: (_, { payload }) => payload,\n  [logOutError]: (_, { payload }) => payload,\n  [getCurrentUserError]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./reducers/contactsReducer\";\nimport auth from \"./reducers/authReducer\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nconst persistConfig = {\n  key: \"token\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst defaultMidleware = getDefaultMiddleware({\n  serializableCheck: {\n    ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n  },\n});\n\nconst store = configureStore({\n  reducer: {\n    contacts: rootReducer,\n    auth: persistReducer(persistConfig, auth),\n  },\n  middleware: [...defaultMidleware],\n});\n\nexport const persistor = persistStore(store);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App/App\";\nimport store, { persistor } from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}